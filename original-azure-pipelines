# # Starter pipeline
# # Start with a minimal pipeline that you can customize to build and deploy your code.
# # Add steps that build, run tests, deploy, and more:
# # https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest
  name: default
  
variables:
  buildConfiguration: 'Release'

# Steps to run in the pipeline
steps:

- script: |
    major_version=1
    minor_version=0
    new_version="$major_version.$minor_version.$(Build.BuildId)"
    echo "New artifact version: $new_version"
    artifactVersion="$new_version"
  displayName: 'Increment Version (Bash)'
  
- script: dotnet pack -p Version=1.0.$(Build.BuildId)
  displayName: 'Create NuGet Package'



  
- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'sonar'
    scannerMode: 'MSBuild'
    projectKey: 'infinity-labs_infinity-labs_3ce926a0-c633-4e17-b074-80a9ea7cb3a6'


# Dotnet build task
- script: dotnet build
  displayName: 'build the artifact'

# Run Code Analysis task
- task: SonarQubeAnalyze@5
  inputs:
    jdkversion: 'JAVA_HOME'






- script: dotnet nuget push --source "hello-world-feed" --api-key az $(System.DefaultWorkingDirectory)/bin/Release/dotnew-SonarQube.1.0.$(Build.BuildId).nupkg
  displayName: 'publish NuGet Package'

# - task: SonarQubeAnalyze@5

